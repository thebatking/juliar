*************** static const char rcsid[] = "$Id: fcgi_stdio.c,v 1.15 2009/09/28 00:46:30 robs E
*** 19,24 ****
  #include <stdarg.h> /* for va_arg */
  #include <stdlib.h> /* for malloc */
  #include <string.h> /* for strerror */
  
  #include "fcgi_config.h"
  
--- 19,26 ----
  #include <stdarg.h> /* for va_arg */
  #include <stdlib.h> /* for malloc */
  #include <string.h> /* for strerror */
+ #include <assert.h>
+ #include <limits.h>
  
  #include "fcgi_config.h"
  
*************** extern int pclose(FILE *stream);
*** 61,66 ****
  
  #define popen _popen
  #define pclose _pclose
  
  #endif /* _WIN32 */
  
--- 63,70 ----
  
  #define popen _popen
  #define pclose _pclose
+ #define fdopen _fdopen
+ #define fileno _fileno
  
  #endif /* _WIN32 */
  
*************** size_t FCGI_fread(void *ptr, size_t size, size_t nmemb, FCGI_FILE *fp)
*** 667,674 ****
          if((size * nmemb) == 0) {
              return 0;
          }
-         n = FCGX_GetStr((char *) ptr, size * nmemb, fp->fcgx_stream);
-         return (n/size);
      }
      return (size_t)EOF;
  }
--- 671,680 ----
          if((size * nmemb) == 0) {
              return 0;
          }
+         ASSERT(size * nmemb < (size_t)INT_MAX);
+         n = FCGX_GetStr((char *) ptr, (int)(size * nmemb), fp->fcgx_stream);
+         ASSERT(n >= 0);
+         return ((size_t)n/size);
      }
      return (size_t)EOF;
  }
*************** size_t FCGI_fwrite(void *ptr, size_t size, size_t nmemb, FCGI_FILE *fp)
*** 682,689 ****
          if((size * nmemb) == 0) {
              return 0;
          }
-         n = FCGX_PutStr((char *) ptr, size * nmemb, fp->fcgx_stream);
-         return (n/size);
      }
      return (size_t)EOF;
  }
--- 688,697 ----
          if((size * nmemb) == 0) {
              return 0;
          }
+         ASSERT(size * nmemb < (size_t)INT_MAX);
+         n = (size_t)FCGX_PutStr((char *) ptr, (int)(size * nmemb), fp->fcgx_stream);
+         ASSERT(n >= 0);
+         return ((size_t)n/size);
      }
      return (size_t)EOF;
  }
