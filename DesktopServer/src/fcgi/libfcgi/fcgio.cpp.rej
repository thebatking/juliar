***************
*** 22,30 ****
  #define DLLAPI  __declspec(dllexport)
  #endif
  
  #include <stdio.h>
  #include <limits.h>
  #include "fcgio.h"
  
  using std::streambuf;
  using std::istream;
--- 22,36 ----
  #define DLLAPI  __declspec(dllexport)
  #endif
  
+ #ifndef _WIN32
  #include <stdio.h>
+ #include <stdint.h>
  #include <limits.h>
+ #endif
+ 
+ #include <assert.h>
  #include "fcgio.h"
+ #include "fcgimisc.h"
  
  using std::streambuf;
  using std::istream;
*************** int fcgi_streambuf::overflow(int c)
*** 64,75 ****
  {
      if (this->bufsize)
      {
-         int plen = pptr() - pbase();
  
          if (plen) 
          {
-             if (FCGX_PutStr(pbase(), plen, this->fcgx) != plen) return EOF;
-             pbump(-plen);
          }
      }
  
--- 70,82 ----
  {
      if (this->bufsize)
      {
+         intptr_t plen = pptr() - pbase();
  
          if (plen) 
          {
+             ASSERT(0 <= plen && plen <= INT_MAX);
+             if (FCGX_PutStr(pbase(), (int)plen, this->fcgx) != plen) return EOF;
+             pbump((int)(-plen));
          }
      }
  
*************** int fcgi_streambuf::underflow()
*** 110,116 ****
      {
          if (in_avail() == 0)
          {
-             int glen = FCGX_GetStr(eback(), this->bufsize, this->fcgx);
              if (glen <= 0) return EOF;
  
              setg(eback(), eback(), eback() + glen);
--- 117,124 ----
      {
          if (in_avail() == 0)
          {
+             ASSERT(0 <= this->bufsize && this->bufsize <= INT_MAX);
+             int glen = FCGX_GetStr(eback(), (int)(this->bufsize), this->fcgx);
              if (glen <= 0) return EOF;
  
              setg(eback(), eback(), eback() + glen);
